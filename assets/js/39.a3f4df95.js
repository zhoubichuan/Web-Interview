(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{207:function(a,t,s){"use strict";s.r(t);var r=s(0),_=Object(r.a)({},(function(){var a=this.$createElement;this._self._c;return this._m(0)}),[function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"十五、微医"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十五、微医"}},[a._v("#")]),a._v(" 十五、微医")]),a._v(" "),s("h2",{attrs:{id:"_1-介绍-js-数据类型，基本数据类型和引用数据类型的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍-js-数据类型，基本数据类型和引用数据类型的区别"}},[a._v("#")]),a._v(" 1.介绍 JS 数据类型，基本数据类型和引用数据类型的区别")]),a._v(" "),s("h2",{attrs:{id:"_2-array-是-object-类型吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-array-是-object-类型吗"}},[a._v("#")]),a._v(" 2.Array 是 Object 类型吗")]),a._v(" "),s("h2",{attrs:{id:"_3-数据类型分别存在哪里"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-数据类型分别存在哪里"}},[a._v("#")]),a._v(" 3.数据类型分别存在哪里")]),a._v(" "),s("p",[a._v('var a = {name: "前端开发"}; var b = a; a = null 那么 b 输出什么\nvar a = {b: 1} 存放在哪里\nvar a = {b: {c: 1}}存放在哪里')]),a._v(" "),s("h2",{attrs:{id:"_4-栈和堆的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-栈和堆的区别"}},[a._v("#")]),a._v(" 4.栈和堆的区别")]),a._v(" "),s("h2",{attrs:{id:"_5-垃圾回收时栈和堆的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-垃圾回收时栈和堆的区别"}},[a._v("#")]),a._v(" 5.垃圾回收时栈和堆的区别")]),a._v(" "),s("h2",{attrs:{id:"_6-数组里面有-10-万个数据，取第一个元素和第-10-万个元素的时间相差多少"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-数组里面有-10-万个数据，取第一个元素和第-10-万个元素的时间相差多少"}},[a._v("#")]),a._v(" 6.数组里面有 10 万个数据，取第一个元素和第 10 万个元素的时间相差多少")]),a._v(" "),s("h2",{attrs:{id:"_7-栈和堆具体怎么存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-栈和堆具体怎么存储"}},[a._v("#")]),a._v(" 7.栈和堆具体怎么存储")]),a._v(" "),s("h2",{attrs:{id:"_8-介绍闭包以及闭包为什么没清除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-介绍闭包以及闭包为什么没清除"}},[a._v("#")]),a._v(" 8.介绍闭包以及闭包为什么没清除")]),a._v(" "),s("h2",{attrs:{id:"_9-闭包的使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-闭包的使用场景"}},[a._v("#")]),a._v(" 9.闭包的使用场景")]),a._v(" "),s("h2",{attrs:{id:"_10-js-怎么实现异步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-js-怎么实现异步"}},[a._v("#")]),a._v(" 10.JS 怎么实现异步")]),a._v(" "),s("h2",{attrs:{id:"_11-异步整个执行周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-异步整个执行周期"}},[a._v("#")]),a._v(" 11.异步整个执行周期")]),a._v(" "),s("h2",{attrs:{id:"_12-promise-的三种状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-promise-的三种状态"}},[a._v("#")]),a._v(" 12.Promise 的三种状态")]),a._v(" "),s("h2",{attrs:{id:"_13-async-await-怎么实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-async-await-怎么实现"}},[a._v("#")]),a._v(" 13.Async/Await 怎么实现")]),a._v(" "),s("h2",{attrs:{id:"_14-promise-和-settimeout-执行先后的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-promise-和-settimeout-执行先后的区别"}},[a._v("#")]),a._v(" 14.Promise 和 setTimeout 执行先后的区别")]),a._v(" "),s("h2",{attrs:{id:"_15-js-为什么要区分微任务和宏任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-js-为什么要区分微任务和宏任务"}},[a._v("#")]),a._v(" 15.JS 为什么要区分微任务和宏任务")]),a._v(" "),s("h2",{attrs:{id:"_16-promise-构造函数是同步还是异步执行，then-呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-promise-构造函数是同步还是异步执行，then-呢"}},[a._v("#")]),a._v(" 16.Promise 构造函数是同步还是异步执行，then 呢")]),a._v(" "),s("h2",{attrs:{id:"_17-发布-订阅和观察者模式的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-发布-订阅和观察者模式的区别"}},[a._v("#")]),a._v(" 17.发布-订阅和观察者模式的区别")]),a._v(" "),s("h2",{attrs:{id:"_18-js-执行过程中分为哪些阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-js-执行过程中分为哪些阶段"}},[a._v("#")]),a._v(" 18.JS 执行过程中分为哪些阶段")]),a._v(" "),s("h2",{attrs:{id:"_19-词法作用域和-this-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-词法作用域和-this-的区别"}},[a._v("#")]),a._v(" 19.词法作用域和 this 的区别")]),a._v(" "),s("h2",{attrs:{id:"_20-平常是怎么做继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-平常是怎么做继承"}},[a._v("#")]),a._v(" 20.平常是怎么做继承")]),a._v(" "),s("h2",{attrs:{id:"_21-深拷贝和浅拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-深拷贝和浅拷贝"}},[a._v("#")]),a._v(" 21.深拷贝和浅拷贝")]),a._v(" "),s("h2",{attrs:{id:"_22-loadsh-深拷贝实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-loadsh-深拷贝实现原理"}},[a._v("#")]),a._v(" 22.loadsh 深拷贝实现原理")]),a._v(" "),s("h2",{attrs:{id:"_23-es6-中-let-块作用域是怎么实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-es6-中-let-块作用域是怎么实现的"}},[a._v("#")]),a._v(" 23.ES6 中 let 块作用域是怎么实现的")]),a._v(" "),s("h2",{attrs:{id:"_24-react-中-setstate-后发生了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-react-中-setstate-后发生了什么"}},[a._v("#")]),a._v(" 24.React 中 setState 后发生了什么")]),a._v(" "),s("h2",{attrs:{id:"_25-setstate-为什么默认是异步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-setstate-为什么默认是异步"}},[a._v("#")]),a._v(" 25.setState 为什么默认是异步")]),a._v(" "),s("h2",{attrs:{id:"_26-setstate-什么时候是同步的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_26-setstate-什么时候是同步的"}},[a._v("#")]),a._v(" 26.setState 什么时候是同步的")]),a._v(" "),s("h2",{attrs:{id:"_27-为什么-3-大框架出现以后就出现很多-native（rn）框架（虚拟-dom）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-为什么-3-大框架出现以后就出现很多-native（rn）框架（虚拟-dom）"}},[a._v("#")]),a._v(" 27.为什么 3 大框架出现以后就出现很多 native（RN）框架（虚拟 DOM）")]),a._v(" "),s("h2",{attrs:{id:"_28-虚拟-dom-主要做了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-虚拟-dom-主要做了什么"}},[a._v("#")]),a._v(" 28.虚拟 DOM 主要做了什么")]),a._v(" "),s("h2",{attrs:{id:"_29-虚拟-dom-本身是什么（js-对象）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-虚拟-dom-本身是什么（js-对象）"}},[a._v("#")]),a._v(" 29.虚拟 DOM 本身是什么（JS 对象）")]),a._v(" "),s("h2",{attrs:{id:"_30-304-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30-304-是什么"}},[a._v("#")]),a._v(" 30.304 是什么")]),a._v(" "),s("h2",{attrs:{id:"_31-打包时-hash-码是怎么生成的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-打包时-hash-码是怎么生成的"}},[a._v("#")]),a._v(" 31.打包时 Hash 码是怎么生成的")]),a._v(" "),s("h2",{attrs:{id:"_32-随机值存在一样的情况，如何避免"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32-随机值存在一样的情况，如何避免"}},[a._v("#")]),a._v(" 32.随机值存在一样的情况，如何避免")]),a._v(" "),s("h2",{attrs:{id:"_33-使用-webpack-构建时有无做一些自定义操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-使用-webpack-构建时有无做一些自定义操作"}},[a._v("#")]),a._v(" 33.使用 webpack 构建时有无做一些自定义操作")]),a._v(" "),s("h2",{attrs:{id:"_34-webpack-做了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34-webpack-做了什么"}},[a._v("#")]),a._v(" 34.webpack 做了什么")]),a._v(" "),s("h2",{attrs:{id:"_35-a，b-两个按钮，点击-aba，返回顺序可能是-baa，如何保证是-aba（promise-then）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-a，b-两个按钮，点击-aba，返回顺序可能是-baa，如何保证是-aba（promise-then）"}},[a._v("#")]),a._v(" 35.a，b 两个按钮，点击 aba，返回顺序可能是 baa，如何保证是 aba（Promise.then）")]),a._v(" "),s("h2",{attrs:{id:"_36-node-接口转发有无做什么优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-node-接口转发有无做什么优化"}},[a._v("#")]),a._v(" 36.node 接口转发有无做什么优化")]),a._v(" "),s("h2",{attrs:{id:"_37-node-起服务如何保证稳定性，平缓降级，重启等"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_37-node-起服务如何保证稳定性，平缓降级，重启等"}},[a._v("#")]),a._v(" 37.node 起服务如何保证稳定性，平缓降级，重启等")]),a._v(" "),s("h2",{attrs:{id:"_38-rn-有没有做热加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_38-rn-有没有做热加载"}},[a._v("#")]),a._v(" 38.RN 有没有做热加载")]),a._v(" "),s("h2",{attrs:{id:"_39-rn-遇到的兼容性问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_39-rn-遇到的兼容性问题"}},[a._v("#")]),a._v(" 39.RN 遇到的兼容性问题")]),a._v(" "),s("h2",{attrs:{id:"_40-rn-如何实现一个原生的组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_40-rn-如何实现一个原生的组件"}},[a._v("#")]),a._v(" 40.RN 如何实现一个原生的组件")]),a._v(" "),s("h2",{attrs:{id:"_41-rn-混原生和原生混-rn-有什么不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_41-rn-混原生和原生混-rn-有什么不同"}},[a._v("#")]),a._v(" 41.RN 混原生和原生混 RN 有什么不同")]),a._v(" "),s("h2",{attrs:{id:"_42-什么是单页项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_42-什么是单页项目"}},[a._v("#")]),a._v(" 42.什么是单页项目")]),a._v(" "),s("h2",{attrs:{id:"_43-遇到的复杂业务场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_43-遇到的复杂业务场景"}},[a._v("#")]),a._v(" 43.遇到的复杂业务场景")]),a._v(" "),s("h2",{attrs:{id:"_44-promise-all-实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_44-promise-all-实现原理"}},[a._v("#")]),a._v(" 44.Promise.all 实现原理")])])}],!1,null,null,null);t.default=_.exports}}]);