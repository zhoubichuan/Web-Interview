(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{203:function(t,a,s){"use strict";s.r(a);var r=s(0),e=Object(r.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"六、兑吧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、兑吧"}},[t._v("#")]),t._v(" 六、兑吧")]),t._v(" "),s("h2",{attrs:{id:"_1-localstorage-和-cookie-有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-localstorage-和-cookie-有什么区别"}},[t._v("#")]),t._v(" 1.localStorage 和 cookie 有什么区别")]),t._v(" "),s("p",[t._v("存储大小\nlocationStorage 5m\ncookie 5k\n生成\nlocationStorage 客户端生成\ncookie 一般是服务端生成\n生命周期\nlocationStorage 永久除非主动删除\ncookie 设置的失效时间\n都遵循同源策略")]),t._v(" "),s("h2",{attrs:{id:"_2-css-选择器有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-css-选择器有哪些"}},[t._v("#")]),t._v(" 2.CSS 选择器有哪些")]),t._v(" "),s("p",[t._v("常见的有标签、类、id、*、子代")]),t._v(" "),s("h2",{attrs:{id:"_3-盒子模型，以及标准情况和-ie-下的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-盒子模型，以及标准情况和-ie-下的区别"}},[t._v("#")]),t._v(" 3.盒子模型，以及标准情况和 IE 下的区别")]),t._v(" "),s("p",[t._v("标准盒模型 margin padding 在盒子外面\n怪异盒模型 margin 在盒子外面 padding 在盒子里面")]),t._v(" "),s("h2",{attrs:{id:"_4-如何实现高度自适应"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-如何实现高度自适应"}},[t._v("#")]),t._v(" 4.如何实现高度自适应")]),t._v(" "),s("p",[t._v("height：100vh")]),t._v(" "),s("h2",{attrs:{id:"_5-prototype-和——proto——区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-prototype-和——proto——区别"}},[t._v("#")]),t._v(" 5.prototype 和——proto——区别")]),t._v(" "),s("p",[t._v("prototype 函数的原型\n"),s("strong",[t._v("proto")]),t._v("对象的原型")]),t._v(" "),s("h2",{attrs:{id:"_6-construct-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-construct-是什么"}},[t._v("#")]),t._v(" 6._construct 是什么")]),t._v(" "),s("h2",{attrs:{id:"_7-new-是怎么实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-new-是怎么实现的"}},[t._v("#")]),t._v(" 7.new 是怎么实现的")]),t._v(" "),s("p",[t._v("function new(fn){\nvar o = new Object()\no."),s("strong",[t._v("proto")]),t._v("=fn.prototype\nreturn fn.call(o)\n}")]),t._v(" "),s("h2",{attrs:{id:"_8-promise-的精髓，以及优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-promise-的精髓，以及优缺点"}},[t._v("#")]),t._v(" 8.promise 的精髓，以及优缺点")]),t._v(" "),s("p",[t._v("解决了回调函数回调地狱的问题，链式写法比较方便")]),t._v(" "),s("h2",{attrs:{id:"_9-如何实现-h5-手机端的适配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-如何实现-h5-手机端的适配"}},[t._v("#")]),t._v(" 9.如何实现 H5 手机端的适配")]),t._v(" "),s("p",[t._v("使用 rem 布局")]),t._v(" "),s("h2",{attrs:{id:"_10-rem、flex-的区别（root-em）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-rem、flex-的区别（root-em）"}},[t._v("#")]),t._v(" 10.rem、flex 的区别（root em）")]),t._v(" "),s("h2",{attrs:{id:"_11-em-和-px-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-em-和-px-的区别"}},[t._v("#")]),t._v(" 11.em 和 px 的区别")]),t._v(" "),s("h2",{attrs:{id:"_12-react-生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-react-生命周期"}},[t._v("#")]),t._v(" 12.React 生命周期")]),t._v(" "),s("h2",{attrs:{id:"_13-如何去除-url-中的-号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-如何去除-url-中的-号"}},[t._v("#")]),t._v(" 13.如何去除 url 中的#号")]),t._v(" "),s("h2",{attrs:{id:"_14-redux-状态管理器和变量挂载到-window-中有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-redux-状态管理器和变量挂载到-window-中有什么区别"}},[t._v("#")]),t._v(" 14.Redux 状态管理器和变量挂载到 window 中有什么区别")]),t._v(" "),s("h2",{attrs:{id:"_15-webpack-和-gulp-的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-webpack-和-gulp-的优缺点"}},[t._v("#")]),t._v(" 15.webpack 和 gulp 的优缺点")]),t._v(" "),s("h2",{attrs:{id:"_16-如何实现异步加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-如何实现异步加载"}},[t._v("#")]),t._v(" 16.如何实现异步加载")]),t._v(" "),s("h2",{attrs:{id:"_17-如何实现分模块打包（多入口）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-如何实现分模块打包（多入口）"}},[t._v("#")]),t._v(" 17.如何实现分模块打包（多入口）")]),t._v(" "),s("h2",{attrs:{id:"_18-前端性能优化（1js-css；2-图片；3-缓存预加载；-4-ssr；-5-多域名加载；6-负载均衡）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-前端性能优化（1js-css；2-图片；3-缓存预加载；-4-ssr；-5-多域名加载；6-负载均衡）"}},[t._v("#")]),t._v(" 18.前端性能优化（1js css；2 图片；3 缓存预加载； 4 SSR； 5 多域名加载；6 负载均衡）")]),t._v(" "),s("p",[t._v("减少请求次数：懒加载、精灵图、合并请求、缓存\n减少请求体积：压缩、公共方法组件\ncdn、多域名")]),t._v(" "),s("h2",{attrs:{id:"_19-并发请求资源数上限（6-个）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-并发请求资源数上限（6-个）"}},[t._v("#")]),t._v(" 19.并发请求资源数上限（6 个）")]),t._v(" "),s("h2",{attrs:{id:"_20-base64-为什么能提升性能，缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-base64-为什么能提升性能，缺点"}},[t._v("#")]),t._v(" 20.base64 为什么能提升性能，缺点")]),t._v(" "),s("h2",{attrs:{id:"_21-介绍-webp-这个图片文件格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-介绍-webp-这个图片文件格式"}},[t._v("#")]),t._v(" 21.介绍 webp 这个图片文件格式")]),t._v(" "),s("h2",{attrs:{id:"_22-介绍-koa2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-介绍-koa2"}},[t._v("#")]),t._v(" 22.介绍 koa2")]),t._v(" "),s("h2",{attrs:{id:"_23-promise-如何实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-promise-如何实现的"}},[t._v("#")]),t._v(" 23.Promise 如何实现的")]),t._v(" "),s("p",[t._v("class Promise(excutor){\nconstructor(){\nthis.status = pendding\nthis.reosve = null\nthis.reject = null\nthis.onresolveCallbacks = []\nthis.onrejectCallbacks = []\nlet resolve=value=>{\nthis.status=resolved\nthis.resolve=value\nthis.onresolvedCallbacks.forEach(fn=>fn())\n}\nlet reject=value=>{\nthis.status=rejected\nthis.reject=value\nthis.onrejectedCallbacks.forEach(fn=>fn())\n}\ntry{\nexcutor(resolve,reject)\n}catch(err){\nreject(err)\n}\n}\nthen(onfullfild,onfullreject){\nif(this.status ==resoved){\nonfullfild(this.resolve)\n}\nif(this.status == reject){\nonfullreject(this.reject)\n}\nif(this.status == 'pending'){\nthis.reolvedCallback.push(()=>{\nonfullfild(this.resolved)\n})\nthis.rejectCallback.push(()=>{\nonfullreject(this.reject)\n})\n}\n}\n}")]),t._v(" "),s("h2",{attrs:{id:"_24-异步请求，低版本-fetch-如何低版本适配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-异步请求，低版本-fetch-如何低版本适配"}},[t._v("#")]),t._v(" 24.异步请求，低版本 fetch 如何低版本适配")]),t._v(" "),s("h2",{attrs:{id:"_25-ajax-如何处理跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-ajax-如何处理跨域"}},[t._v("#")]),t._v(" 25.ajax 如何处理跨域")]),t._v(" "),s("p",[t._v("corse 配置请求头，需要后端配置修改白名单")]),t._v(" "),s("h2",{attrs:{id:"_26-cors-如何设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_26-cors-如何设置"}},[t._v("#")]),t._v(" 26.CORS 如何设置")]),t._v(" "),s("h2",{attrs:{id:"_27-jsonp-为什么不支持-post-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-jsonp-为什么不支持-post-方法"}},[t._v("#")]),t._v(" 27.jsonp 为什么不支持 post 方法")]),t._v(" "),s("h2",{attrs:{id:"_28-介绍同源策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-介绍同源策略"}},[t._v("#")]),t._v(" 28.介绍同源策略")]),t._v(" "),s("p",[t._v("协议、端口、域名相同的资源可以互相访问")]),t._v(" "),s("h2",{attrs:{id:"_29-react-使用过的一些组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-react-使用过的一些组件"}},[t._v("#")]),t._v(" 29.React 使用过的一些组件")]),t._v(" "),s("h2",{attrs:{id:"_30-介绍-immuable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30-介绍-immuable"}},[t._v("#")]),t._v(" 30.介绍 Immuable")]),t._v(" "),s("h2",{attrs:{id:"_31-介绍下-redux-整个流程原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-介绍下-redux-整个流程原理"}},[t._v("#")]),t._v(" 31.介绍下 redux 整个流程原理")]),t._v(" "),s("h2",{attrs:{id:"_32-介绍原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32-介绍原型链"}},[t._v("#")]),t._v(" 32.介绍原型链")]),t._v(" "),s("h2",{attrs:{id:"_33-如何继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-如何继承"}},[t._v("#")]),t._v(" 33.如何继承")]),t._v(" "),s("p",[t._v("1.原型链继承 2.寄生继承 3.寄生组合继承\n4.es6 继承")])])}],!1,null,null,null);a.default=e.exports}}]);